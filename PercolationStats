public class Statistics {
    public double[] data;
    public int trials;
    public long runtime;

    public Statistics(int trials, int width) {
        Percolation percolation = new Percolation(width);
        double[] data = new double[trials];

        long start = System.nanoTime();
        for (int i = 0; i < trials; i++) data[i] = percolation.simulate();
        long end = System.nanoTime();

        this.trials = trials;
        this.data = data;
        this.runtime = end - start;
    }

    public double mean() {
        double sum = 0;
        for (double datapoint: data) sum += datapoint;
        return sum / (double)  trials;
    }

    public double stddev(double mean) {
        double sqrddeviation = 0;
        for (double datapoint: data) sqrddeviation += Math.pow(datapoint - mean, 2);
        return Math.sqrt(sqrddeviation / trials);
    }

    public double[] interval(double mean, double stddev) {
        double adjustment = (1.96 * stddev) / Math.sqrt(trials);
        double[] interval = new double[] {mean - adjustment, mean + adjustment};
        return interval;
    }

    public long runtime() {
        return runtime;
    }
}
